<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:bpm="http://www.mulesoft.org/schema/mule/bpm"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
          http://www.mulesoft.org/schema/mule/bpm http://www.mulesoft.org/schema/mule/bpm/current/mule-bpm.xsd">

    <bpm:config name="engineConfig" tenantId="com.alfame.esb">
        <bpm:data-source>
            <bpm:generic-data-source driverClassName="org.hsqldb.jdbcDriver"
                                     jdbcUrl="jdbc:hsqldb:mem:flowable"
                                     username="sa"
                                     password="sa"
                                     type="HSQL"/>
        </bpm:data-source>
        <bpm:definitions>
            <bpm:classpath-definition resourceClasspath="processes/SignalSleeperProcess.bpmn20.xml"/>
            <bpm:classpath-definition resourceClasspath="processes/SignalSleeperOrchestratorProcess.bpmn20.xml"/>
        </bpm:definitions>
    </bpm:config>

    <flow name="startSleeperFlow">
        <bpm:task-listener config-ref="engineConfig" endpointUrl="bpm://startSleeper" transactionType="LOCAL" transactionalAction="ALWAYS_BEGIN" />

        <logger level="INFO" message=""/>

        <bpm:process-factory config-ref="engineConfig" processDefinitionKey="signalSleeperProcess" tenantId="com.alfame.esb" uniqueBusinessKey="uniqueSleeperExperience" processName="sleep1">
            <bpm:process-variables>
                <bpm:process-variable variableName="sleeperName" value="#['patientx']" />
                <bpm:process-variable variableName="targetAmount" value="#[12]" />
            </bpm:process-variables>
        </bpm:process-factory>
        <logger level="INFO" message="Sleeper process instance id: #[payload.processInstanceId]"/>

        <bpm:set-variable config-ref="engineConfig" variableName="sleeperProcessInstanceId">
            <bpm:variable-content>#[payload.processInstanceId]</bpm:variable-content>
        </bpm:set-variable>
    </flow>

    <flow name="checkForSleepFlow">
        <bpm:task-listener config-ref="engineConfig" endpointUrl="bpm://checkForSleep" transactionType="LOCAL" transactionalAction="ALWAYS_BEGIN" />

        <logger level="INFO" message=""/>

        <bpm:get-variable config-ref="engineConfig" variableName="sleeperProcessInstanceId" target="sleeperProcessInstanceId" />
        <logger level="INFO" message="Sleeper process instance id: #[vars.sleeperProcessInstanceId]" />

        <bpm:process-instance-query-builder config-ref="engineConfig" target="sleeperProcessQuery">
            <bpm:process-instance-filters>
                <bpm:process-instance-tenant-filter tenantId="com.alfame.esb" />
                <bpm:process-instance-id-filter processInstanceId="#[vars.sleeperProcessInstanceId]" />
                <bpm:process-instance-name-like-filter nameLike="sleep%" />
                <bpm:process-instance-variable-like-filter variableName="sleeperName"  valueLike="patient%" />
                <bpm:process-instance-variable-like-filter variableName="targetAmount" />
                <bpm:process-instance-started-after-filter startedAfter="2000-01-01" />
                <bpm:process-instance-started-before-filter startedBefore="2050-01-01" />
                <bpm:process-instance-only-unfinished-filter />
            </bpm:process-instance-filters>
        </bpm:process-instance-query-builder>
        <bpm:get-unique-process-instance query="#[vars.sleeperProcessQuery]" target="sleeperProcess" />

        <choice>
            <when expression="#[vars.sleeperProcess != null and vars.sleeperProcess.processInstanceId == vars.sleeperProcessInstanceId]">
                <logger level="INFO" message="Unfinished sleeper found: #[vars.sleeperProcess.processInstanceId]" />
            </when>
            <otherwise>
                <raise-error type="ANY" description="Sleeper not found"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="wakeupFlow">
        <bpm:task-listener config-ref="engineConfig" endpointUrl="bpm://wakeup" transactionType="LOCAL" transactionalAction="ALWAYS_BEGIN" />

        <logger level="INFO" message=""/>

        <bpm:get-variable config-ref="engineConfig" variableName="sleeperProcessInstanceId" target="sleeperProcessInstanceId" />
        <logger level="INFO" message="Sleeper process instance id: #[vars.sleeperProcessInstanceId]" />

        <until-successful maxRetries="5" millisBetweenRetries="100">
            <bpm:trigger-signal config-ref="engineConfig" signalName="wakeUp" processInstanceId="#[vars.sleeperProcessInstanceId]" />
        </until-successful>
    </flow>

    <flow name="checkForCompletionFlow">
        <bpm:task-listener config-ref="engineConfig" endpointUrl="bpm://checkForCompletion" transactionType="LOCAL" transactionalAction="ALWAYS_BEGIN" />

        <logger level="INFO" message=""/>

        <bpm:get-variable config-ref="engineConfig" variableName="sleeperProcessInstanceId" target="sleeperProcessInstanceId" />
        <logger level="INFO" message="Sleeper process instance id: #[vars.sleeperProcessInstanceId]" />

        <bpm:process-instance-query-builder config-ref="engineConfig" target="sleeperProcessQuery">
            <bpm:process-instance-filters>
                <bpm:process-instance-id-filter processInstanceId="#[vars.sleeperProcessInstanceId]" />
                <bpm:process-instance-definition-filter key="signalSleeperProcess" />
                <bpm:process-instance-business-key-like-filter businessKeyLike="%SleeperExperience" />
                <bpm:process-instance-finished-after-filter finishedAfter="2000-01-01" />
                <bpm:process-instance-finished-before-filter finishedBefore="2050-01-01" />
                <bpm:process-instance-only-finished-filter />
            </bpm:process-instance-filters>
        </bpm:process-instance-query-builder>
        <bpm:get-process-instances query="#[vars.sleeperProcessQuery]" target="sleeperProcesses" />

        <choice>
            <when expression="#[sizeOf(vars.sleeperProcesses) &gt; 0 and vars.sleeperProcesses[0].processInstanceId == vars.sleeperProcessInstanceId]">
                <logger level="INFO" message="Finished sleeper found: #[vars.sleeperProcesses[0].processInstanceId]" />
            </when>
            <otherwise>
                <raise-error type="ANY" description="Sleeper not found"/>
            </otherwise>
        </choice>
    </flow>
</mule>
